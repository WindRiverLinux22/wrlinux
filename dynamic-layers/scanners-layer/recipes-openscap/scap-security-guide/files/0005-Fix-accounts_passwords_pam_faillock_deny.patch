From bbae7e9183a6059411ca9ac240b3e490e952be4e Mon Sep 17 00:00:00 2001
From: Yi Zhao <yi.zhao@windriver.com>
Date: Thu, 2 Feb 2023 15:40:29 +0800
Subject: [PATCH] Fix accounts_passwords_pam_faillock_deny

Upstream-Status: Inappropriate [WRLinux specific]

Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
---
 .../bash/shared.sh                            |  2 +-
 .../bash/wrlinux.sh                           | 12 ++++
 .../oval/wrlinux.xml                          | 51 +++++++++++++++
 .../oval/accounts_password_pam_faillock.xml   | 16 +++++
 shared/macros/bash.jinja                      | 64 +++++++++++++++++++
 5 files changed, 144 insertions(+), 1 deletion(-)
 create mode 100644 linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/wrlinux.sh
 create mode 100644 linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/oval/wrlinux.xml

diff --git a/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/shared.sh b/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/shared.sh
index 23a312493c..f392618d11 100644
--- a/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/shared.sh
+++ b/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/shared.sh
@@ -1,4 +1,4 @@
-# platform = multi_platform_wrlinux,multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
+# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle
 
 {{{ bash_instantiate_variables("var_accounts_passwords_pam_faillock_deny") }}}
 
diff --git a/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/wrlinux.sh b/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/wrlinux.sh
new file mode 100644
index 0000000000..62ec4de1c8
--- /dev/null
+++ b/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/bash/wrlinux.sh
@@ -0,0 +1,12 @@
+# platform = multi_platform_wrlinux
+
+{{{ bash_instantiate_variables("var_accounts_passwords_pam_faillock_deny") }}}
+
+auth_file="/etc/pam.d/common-auth"
+account_file="/etc/pam.d/common-account"
+
+{{{ bash_set_faillock_option_preauth("$auth_file", "deny", "$var_accounts_passwords_pam_faillock_deny") }}}
+{{{ bash_set_faillock_option_authfail("$auth_file", "deny", "$var_accounts_passwords_pam_faillock_deny") }}}
+{{{ bash_set_faillock_option_authsucc("$auth_file", "deny", "$var_accounts_passwords_pam_faillock_deny") }}}
+
+{{{ bash_set_faillock_option_account("$account_file") }}}
diff --git a/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/oval/wrlinux.xml b/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/oval/wrlinux.xml
new file mode 100644
index 0000000000..a997030a60
--- /dev/null
+++ b/linux_os/guide/system/accounts/accounts-pam/locking_out_password_attempts/accounts_passwords_pam_faillock_deny/oval/wrlinux.xml
@@ -0,0 +1,51 @@
+<def-group>
+  <definition class="compliance" id="{{{ rule_id }}}" version="5">
+    {{{ oval_metadata("Lockout account after failed login attempts") }}}
+    <criteria>
+      <criterion test_ref="test_accounts_passwords_pam_faillock_preauth_deny_common-auth"
+      comment="pam_faillock.so preauth deny value set in common-auth" />
+      <criterion test_ref="test_accounts_passwords_pam_faillock_authfail_deny_common-auth"
+      comment="pam_faillock.so authfail deny value set in common-auth" />
+      <criterion test_ref="test_accounts_passwords_pam_faillock_account_in_common-account"
+      comment="account requires pam_faillock.so in /etc/pam.d/common-account" />
+    </criteria>
+  </definition>
+
+  <ind:textfilecontent54_test check="all" check_existence="all_exist" comment="Check pam_faillock.so preauth silent present, with correct deny value in /etc/pam.d/common-auth" id="test_accounts_passwords_pam_faillock_preauth_deny_common-auth" version="2">
+    <ind:object object_ref="object_accounts_passwords_pam_faillock_preauth_deny_common-auth" />
+    <ind:state state_ref="state_accounts_passwords_pam_faillock_deny_common-auth" />
+  </ind:textfilecontent54_test>
+
+  <ind:textfilecontent54_test check="all" check_existence="all_exist" comment="Check pam_faillock.so authfail present, with correct deny value in /etc/pam.d/common-auth" id="test_accounts_passwords_pam_faillock_authfail_deny_common-auth" version="2">
+    <ind:object object_ref="object_accounts_passwords_pam_faillock_authfail_deny_common-auth" />
+    <ind:state state_ref="state_accounts_passwords_pam_faillock_deny_common-auth" />
+  </ind:textfilecontent54_test>
+
+  <ind:textfilecontent54_test check="all" check_existence="all_exist" comment="Check if pam_faillock.so is required in account section in /etc/pam.d/common-account" id="test_accounts_passwords_pam_faillock_account_in_common-account" version="2">
+    <ind:object object_ref="object_accounts_passwords_pam_faillock_account_in_common-account"/>
+  </ind:textfilecontent54_test>
+
+  <ind:textfilecontent54_object id="object_accounts_passwords_pam_faillock_preauth_deny_common-auth" version="2">
+    <ind:filepath>/etc/pam.d/common-auth</ind:filepath>
+    <ind:pattern operation="pattern match">^\s*auth\s+(?:(?:required))\s+pam_faillock\.so\s+preauth\s+silent.*deny=([0-9]*).*$</ind:pattern>
+    <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
+  </ind:textfilecontent54_object>
+
+  <ind:textfilecontent54_object id="object_accounts_passwords_pam_faillock_authfail_deny_common-auth" version="2">
+    <ind:filepath>/etc/pam.d/common-auth</ind:filepath>
+    <ind:pattern operation="pattern match">^\s*auth\s+(?:(?:sufficient)|(?:\[default=die\]))\s+pam_faillock\.so\s+authfail.*deny=([0-9]*).*$</ind:pattern>
+    <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
+  </ind:textfilecontent54_object>
+
+  <ind:textfilecontent54_object id="object_accounts_passwords_pam_faillock_account_in_common-account" version="2">
+    <ind:filepath>/etc/pam.d/common-account</ind:filepath>
+    <ind:pattern operation="pattern match">^\s*account\s+required\s+pam_faillock\.so.*$</ind:pattern>
+    <ind:instance datatype="int" operation="greater than or equal">1</ind:instance>
+  </ind:textfilecontent54_object>
+
+  <ind:textfilecontent54_state id="state_accounts_passwords_pam_faillock_deny_common-auth" version="2">
+    <ind:subexpression datatype="int" operation="greater than or equal" var_ref="var_accounts_passwords_pam_faillock_deny" />
+  </ind:textfilecontent54_state>
+
+  <external_variable comment="number of failed login attempts allowed" datatype="int" id="var_accounts_passwords_pam_faillock_deny" version="2" />
+</def-group>
diff --git a/shared/checks/oval/accounts_password_pam_faillock.xml b/shared/checks/oval/accounts_password_pam_faillock.xml
index c55c143ba5..ddc435caf3 100644
--- a/shared/checks/oval/accounts_password_pam_faillock.xml
+++ b/shared/checks/oval/accounts_password_pam_faillock.xml
@@ -1,11 +1,19 @@
 <def-group>
   <definition class="compliance" id="accounts_password_pam_faillock" version="1">
     <metadata>
+      {{% if product in ["wrlinuxlts21", "wrlinuxlts22"] %}}
+      <title>Check pam_faillock Existence in common-auth</title>
+      {{% else %}}
       <title>Check pam_faillock Existence in system-auth</title>
+      {{% endif %}}
       <affected family="unix">
         <platform>multi_platform_all</platform>
       </affected>
+      {{% if product in ["wrlinuxlts21", "wrlinuxlts22"] %}}
+      <description>Check that pam_faillock.so exists in common-auth</description>
+      {{% else %}}
       <description>Check that pam_faillock.so exists in system-auth</description>
+      {{% endif %}}
     </metadata>
     <criteria>
       <criterion comment="Conditions for pam_faillock are satisfied"
@@ -13,12 +21,20 @@
     </criteria>
   </definition>
 
+  {{% if product in ["wrlinuxlts21", "wrlinuxlts22"] %}}
+  <ind:textfilecontent54_test check="all" comment="check the configuration of /etc/pam.d/common-auth" id="test_accounts_password_pam_faillock" version="1">
+  {{% else %}}
   <ind:textfilecontent54_test check="all" comment="check the configuration of /etc/pam.d/system-auth" id="test_accounts_password_pam_faillock" version="1">
+  {{% endif %}}
     <ind:object object_ref="obj_accounts_password_pam_faillock" />
   </ind:textfilecontent54_test>
 
   <ind:textfilecontent54_object id="obj_accounts_password_pam_faillock" version="1">
+    {{% if product in ["wrlinuxlts21", "wrlinuxlts22"] %}}
+    <ind:filepath>/etc/pam.d/common-auth</ind:filepath>
+    {{% else %}}
     <ind:filepath>/etc/pam.d/system-auth</ind:filepath>
+    {{% endif %}}
     <ind:pattern operation="pattern match">^\s*password\s+(?:(?:required)|(?:requisite))\s+pam_faillock\.so.*$</ind:pattern>
     <ind:instance datatype="int">1</ind:instance>
   </ind:textfilecontent54_object>
diff --git a/shared/macros/bash.jinja b/shared/macros/bash.jinja
index f05e49c45d..1f4f9b143b 100644
--- a/shared/macros/bash.jinja
+++ b/shared/macros/bash.jinja
@@ -1094,6 +1094,70 @@ else
 fi
 {{%- endmacro -%}}
 
+{{%- macro bash_set_faillock_option_preauth(pam_file, option, value) -%}}
+# is auth required pam_faillock.so preauth present?
+if grep -qE '^\s*auth\s+required\s+pam_faillock\.so\s+preauth.*$' "{{{ pam_file }}}" ; then
+    # is option silent present?
+    if ! grep -qE '^\s*auth\s+required\s+pam_faillock\.so\s+preauth\s+silent.*$' "{{{ pam_file }}}" ; then
+		sed -i --follow-symlinks 's/^auth.*required.*pam_faillock.so.*preauth/& silent/' "{{{ pam_file }}}"
+	fi
+    # is the option set?
+    if grep -qE '^\s*auth\s+required\s+pam_faillock\.so\s+preauth.*'"{{{ option }}}"'=([0-9]*).*$' "{{{ pam_file }}}" ; then
+        # just change the value of option to a correct value
+        sed -i --follow-symlinks 's/\(^auth.*required.*pam_faillock.so.*preauth.*silent.*\)\('"{{{ option }}}"' *= *\).*/\1\2'"{{{ value }}}"'/' "{{{ pam_file }}}"
+    # the option is not set.
+    else
+        # append the option
+        sed -i --follow-symlinks '/^auth.*required.*pam_faillock.so.*preauth.*silent.*/ s/$/ '"{{{ option }}}"'='"{{{ value }}}"'/' "{{{ pam_file }}}"
+    fi
+# auth required pam_faillock.so preauth is not present, insert the whole line
+else
+    sed -i --follow-symlinks '/^auth.*sufficient.*pam_unix.so.*/i auth        required      pam_faillock.so preauth silent '"{{{ option }}}"'='"{{{ value }}}" "{{{ pam_file }}}"
+fi
+{{%- endmacro -%}}
+
+{{%- macro bash_set_faillock_option_authfail(pam_file, option, value) -%}}
+# is auth default pam_faillock.so authfail present?
+if grep -qE '^\s*auth\s+(\[default=die\])\s+pam_faillock\.so\s+authfail.*$' "{{{ pam_file }}}" ; then
+    # is the option set?
+    if grep -qE '^\s*auth\s+(\[default=die\])\s+pam_faillock\.so\s+authfail.*'"{{{ option }}}"'=([0-9]*).*$' "{{{ pam_file }}}" ; then
+        # just change the value of option to a correct value
+        sed -i --follow-symlinks 's/\(^auth.*[default=die].*pam_faillock.so.*authfail.*\)\('"{{{ option }}}"' *= *\).*/\1\2'"{{{ value }}}"'/' "{{{ pam_file }}}"
+    # the option is not set.
+    else
+        # append the option
+        sed -i --follow-symlinks '/^auth.*[default=die].*pam_faillock.so.*authfail.*/ s/$/ '"{{{ option }}}"'='"{{{ value }}}"'/' "{{{ pam_file }}}"
+    fi
+# auth default pam_faillock.so authfail is not present, insert the whole line
+else
+    sed -i --follow-symlinks '/^auth.*sufficient.*pam_unix.so.*/a auth        [default=die] pam_faillock.so authfail '"{{{ option }}}"'='"{{{ value }}}" "{{{ pam_file }}}"
+fi
+{{%- endmacro -%}}
+
+{{%- macro bash_set_faillock_option_authsucc(pam_file, option, value) -%}}
+# is auth default pam_faillock.so authsucc present?
+if grep -qE '^\s*auth\s+sufficient\s+pam_faillock\.so\s+authsucc.*$' "{{{ pam_file }}}" ; then
+    # is the option set?
+    if grep -qE '^\s*auth\s+sufficient\s+pam_faillock\.so\s+authsucc.*'"{{{ option }}}"'=([0-9]*).*$' "{{{ pam_file }}}" ; then
+        # just change the value of option to a correct value
+        sed -i --follow-symlinks 's/\(^auth.*sufficient.*pam_faillock.so.*authsucc.*\)\('"{{{ option }}}"' *= *\).*/\1\2'"{{{ value }}}"'/' "{{{ pam_file }}}"
+    # the option is not set.
+    else
+        # append the option
+        sed -i --follow-symlinks '/^auth.*sufficient.*pam_faillock.so.*authsucc.*/ s/$/ '"{{{ option }}}"'='"{{{ value }}}"'/' "{{{ pam_file }}}"
+    fi
+# auth default pam_faillock.so authsucc is not present, insert the whole line
+else
+    sed -i --follow-symlinks '/^auth.*sufficient.*pam_unix.so.*/a auth        sufficient pam_faillock.so authsucc '"{{{ option }}}"'='"{{{ value }}}" "{{{ pam_file }}}"
+fi
+{{%- endmacro -%}}
+
+{{%- macro bash_set_faillock_option_account(pam_file) -%}}
+if ! grep -qE '^\s*account\s+required\s+pam_faillock\.so.*$' "{{{ pam_file }}}" ; then
+    sed -E -i --follow-symlinks '/^\s*account\s*required\s*pam_unix.so/i account     required      pam_faillock.so' "{{{ pam_file }}}"
+fi
+{{%- endmacro -%}}
+
 {{#
     Print a message to stderr and exit the shell
 
-- 
2.25.1

